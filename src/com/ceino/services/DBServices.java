package com.ceino.services;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.text.StyleContext.SmallAttributeSet;

import com.mysql.jdbc.PreparedStatement;


public class DBServices
{
	 static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
	   static final String DB_URL = "jdbc:mysql://localhost:3306/test1";

	   //  Database credentials
	   static final String USER = "admin";
	   static final String PASS = "admin123";
	   
	   public static void main(String[] args) {
	   Connection conn = null;
	   Statement stmt = null;
	   try{
	      //STEP 2: Register JDBC driver
	      Class.forName("com.mysql.jdbc.Driver");

	      //STEP 3: Open a connection
	      System.out.println("Connecting to a selected database...");
	      conn = DriverManager.getConnection(DB_URL, USER, PASS);
	      System.out.println("Connected database successfully...");
	      
	      //STEP 4: Execute a query
	      System.out.println("Retrieving records from the table...");
	     
	    
	      BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	      System.out.print("Number of entries: ");
			String in = br.readLine();
			int num = Integer.parseInt(in);
			 stmt = conn.createStatement();
			int nu = 0;
			String cn = null,nc = null,nq = null;
			String sql ="INSERT INTO customers (customer_name,city,country) " +
	                   "VALUES (?,?,?)";
			java.sql.PreparedStatement ps=conn.prepareStatement("INSERT INTO customers (customer_name,city,country) " +
	                   "VALUES (?,?,?)",Statement.RETURN_GENERATED_KEYS);
			
			//stmt=conn.prepareStatement(ps,PreparedStatement.RETURN_GENERATED_KEYS );
			
			for(int i=0;i<num;i++)
			{
				/*System.out.println("Enter customer-id");
				String n = br.readLine()
				 nu = Integer.parseInt(n);*/
				System.out.println("Enter customer-name");
				 cn = br.readLine();
				System.out.println("Enter city");
				 nc = br.readLine();
				System.out.println("Enter country");
				 nq = br.readLine();
				
				// ps.setInt(1, );
			    ps.setString(1, cn);
			      ps.setString(2, nc);
			      ps.setString(3, nq);
			      ps.executeUpdate();
			     /* ResultSet tableKeys = ps.getGeneratedKeys();
			      tableKeys.next();
			      int autoGeneratedID = tableKeys.getInt(1);
			      */
			    ResultSet  rs = stmt.getGeneratedKeys();
		            while (rs.next()) {
		                System.out.println("Key returned from getGeneratedKeys():"
		                        + rs.getInt(1));
		            } 
		            rs.close();
			    
			    }
			    				 
			
				
	    
	      /*sql = "INSERT INTO customers " +
	                   "VALUES ( 111, 'Mahnaz', 'Fatma', 'dsf')";
	      stmt.executeUpdate(sql);
	      sql = "INSERT INTO customers " +
	                   "VALUES ( 122, 'Zaid', 'Khan', 'dfcv')";
	      stmt.executeUpdate(sql);
	      sql = "INSERT INTO customers " +
	                   "VALUES( 151, 'Sumit', 'Mittal', 'edfc')";
	      stmt.executeUpdate(sql);*/
	      /*String sql1 ="UPDATE customers " +
                  "SET customer_id = 30 WHERE customer_id=5 and city='Ga'";
     stmt.executeUpdate(sql1);*/
     
	   /*   String sql2 = "DELETE FROM customers WHERE customer_id=4";
	      stmt.executeUpdate(sql2);*/
	      String query = "SELECT * FROM customers";
	      ResultSet rs = stmt.executeQuery(query);
	      while (rs.next())
	      {
	        int id = rs.getInt("customer_id");
	        String Name = rs.getString("customer_name");
	        String city = rs.getString("city");
	        String country = rs.getString("country");
	         
	        // print the results
	        System.out.format("%s, %s, %s, %s\n", id, Name, city, country);
	      }
	      stmt.close();
	      
	   }catch(SQLException se){
	      //Handle errors for JDBC
	      se.printStackTrace();
	   }catch(Exception e){
	      //Handle errors for Class.forName
	      e.printStackTrace();
	   }finally{
	      //finally block used to close resources
	      try{
	         if(stmt!=null)
	            conn.close();
	      }catch(SQLException se){
	      }// do nothing
	      try{
	         if(conn!=null)
	            conn.close();
	      }catch(SQLException se){
	         se.printStackTrace();
	      }//end finally try
	   }//end try
	   System.out.println("Goodbye!");
	}//end main
	}//end JDBCExample